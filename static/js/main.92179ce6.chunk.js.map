{"version":3,"sources":["Ropsten.png","App.js","components/isLoginMetaMask.js","components/isMetaMask.js","components/isDesiredNetwork.js","components/Login.js","MyComponent.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","isMobile","isLoginMetaMask","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","isMetaMask","isDesiredNetwork","_this","state","image","clicked","handleClick","bind","assertThisInitialized","e","preventDefault","setState","src","alt","console","log","_this2","Button_default","onClick","Login","MyComponent","components","foo","boo","coo","doo","TagName","tag","detect","require","App","context","handleShow","handleClose","network","mount","init","show","install","isLogin","web3","browser","navigator","userAgent","match","name","window","open","ethereum","enable","on","accounts","length","_this3","networkVersion","location","reload","content","src_MyComponent","react","Fragment","index_es","mb","Modal_default","onHide","Header","closeButton","Title","Body","Footer","variant","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92179ce6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ropsten.7a313811.png\";","\r\nimport React, { Component } from 'react';\r\nimport { Fragment } from 'react'\r\nimport { MetaMaskButton } from 'rimble-ui'\r\nimport Web3 from 'web3';\r\nimport MyComponent from './MyComponent'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport './App.css';\r\nimport { resolve } from 'url';\r\nimport { actionTypes } from 'react-redux-form';\r\nvar detect = require('detect-browser').detect\r\n\r\nvar isMobile;\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.network = this.network.bind(this)\r\n    this.mount = this.mount.bind(this)\r\n\r\n    this.init= this.init.bind(this);\r\n\r\n\r\n    this.state = {\r\n      show: false,\r\n      install:false,\r\n      isMetaMask: false,\r\n      isLoginMetaMask:false,\r\n      isDesiredNetwork:false,\r\n      isLogin:false\r\n    };\r\n  }\r\n  componentWillMount(){\r\n      if(typeof web3 !== 'undefined'){\r\n        this.state.install = false;\r\n      }\r\n      else{\r\n        this.state.install = true;\r\n      }\r\n      console.log('hello')\r\n      console.log(this.state.install)\r\n  }\r\n\r\n    \r\n    mount(){\r\n    if (typeof web3 !== 'undefined') {\r\n      // If a web3 instance is already provided by Meta Mask.\r\n      this.setState({isMetaMask:false})\r\n      this.init()\r\n     \r\n    } else {\r\n      // Specify default instance if no web3 instance provided\r\n     \r\n        const browser = detect()\r\n      \r\n        // Touch the web3 object to trigger Brave install prompt\r\n       \r\n        isMobile = !!detectMobile()\r\n\r\n        function detectMobile() {\r\n          return (\r\n              navigator.userAgent.match(/Android/i)\r\n           || navigator.userAgent.match(/webOS/i)\r\n           || navigator.userAgent.match(/iPhone/i)\r\n           || navigator.userAgent.match(/iPad/i)\r\n           || navigator.userAgent.match(/iPod/i)\r\n           || navigator.userAgent.match(/BlackBerry/i)\r\n           || navigator.userAgent.match(/Windows Phone/i)\r\n          )\r\n        }\r\n        if(!isMobile){\r\n          switch (browser.name) {\r\n      \r\n            case 'firefox':\r\n              window.open('https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/','_blank')\r\n             \r\n        \r\n              break\r\n            \r\n              case 'chrome':\r\n               window.open('https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en','_blank')\r\n        \r\n            case 'opera':\r\n              window.open('https://addons.opera.com/en/extensions/details/metamask/','_blank')\r\n              \r\n              break\r\n            \r\n           }\r\n\r\n        }\r\n       \r\n        this.setState({ isMetaMask: true });\r\n\r\n        \r\n\r\n        \r\n        \r\n      }\r\n      \r\n      \r\n\r\n    \r\n   \r\n  }\r\n  \r\n  async init(){\r\n    try {\r\n      const accounts = await window.ethereum.enable()\r\n      this.setState({isDesiredNetwork:true,\r\n      isMetaMask:false})\r\n      this.network()\r\n    \r\n    } catch (error) {\r\n      \r\n      this.setState({isLoginMetaMask:true,isMetaMask:false})\r\n      \r\n    }\r\n    window.ethereum.on('accountsChanged',(accounts) => {\r\n      console.log(accounts)\r\n      if(accounts.length===1){ console.log('hi')\r\n        this.setState({isLoginMetaMask:true,\r\n          isMetaMask: false,\r\n          isDesiredNetwork:false,\r\n          isLogin:false\r\n        })\r\n        \r\n      }\r\n    \r\n      \r\n    })\r\n\r\n   \r\n  }\r\n  network(){\r\n    let web3;\r\n    \r\n    // If a web3 instance is already provided by Meta Mask.\r\n      if (window.ethereum.networkVersion === \"3\") {\r\n        this.setState({isLogin:true})\r\n      } else {\r\n        \r\n          var desiredNetwork = \"3\"\r\n          window.ethereum.on('networkChanged', (accounts) =>{\r\n            console.log(accounts)\r\n            if(accounts===\"3\"){\r\n              this.setState({isLogin:true})\r\n            }\r\n            else{\r\n              this.setState({isLogin:false})\r\n              this.setState({isDesiredNetwork:true})\r\n            }\r\n          })\r\n            \r\n          \r\n        \r\n      }\r\n\r\n    }\r\n  \r\n\r\n\r\n  handleClose() {\r\n    window.location.reload();\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n    this.mount()\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    if(this.state.isMetaMask){\r\n      content = <MyComponent tag='boo'></MyComponent>\r\n\r\n    }\r\n    if(this.state.isLoginMetaMask){\r\n      content = <MyComponent tag='foo'>\r\n      </MyComponent>\r\n     \r\n    }\r\n    if(this.state.isDesiredNetwork){\r\n      content = <MyComponent tag='coo'>\r\n\r\n      </MyComponent>\r\n    }\r\n    if(this.state.isLogin){\r\n      content = <MyComponent tag='doo' ></MyComponent>\r\n    }\r\n    if(isMobile){\r\n      content = <Fragment>\r\n        Mobile coming soon!\r\n      </Fragment>\r\n    }\r\n    console.log(this.state.install)\r\n    \r\n    return (\r\n      <>\r\n       \r\n        <MetaMaskButton mb={3} onClick={this.handleShow}>{this.state.install?\"Install MetaMask\":\"Connect with MetaMask\"}</MetaMaskButton>\r\n\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Lets Start!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Done!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Web3 from 'web3';\n\n\nexport default class isLoginMetaMask extends Component{\n\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        return(\n            <div>\n                <p>Login into MetaMask\n            <br />\n          \n           \n          </p>\n            </div>\n          \n        )\n    }\n}","import React, { Component } from 'react';\nimport Web3 from 'web3';\n\n\n\nexport default class isMetaMask extends Component{\n    \n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <div>\n                <p>Install MetaMask to Sign in\n                \n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Web3 from 'web3';\nimport image from '../Ropsten.png'\n\n\nexport default class isDesiredNetwork extends Component{\n\n    constructor(props){\n        super(props)\n        this.state={\n            image:'',\n            clicked:true\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(e){\n        e.preventDefault();\n        this.setState({clicked:!this.state.clicked})\n        if(this.state.clicked){\n            this.state.image =  <img  src={image}  alt=\"fireSpot\"/>\n        }\n        else{\n            this.state.image=''\n        }\n       \n        console.log('hello')\n    }\n    \n    render(){\n        return(\n            <div>\n                <Button onClick={(e)=>this.handleClick(e)}> Connect To Ropsten Network</Button>\n                <br/>\n                {this.state.image}\n               </div>\n          \n        )\n    }\n}","import React, { Component } from 'react';\nimport Web3 from 'web3';\n\n\n\nexport default class Login extends Component{\n    \n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <div>\n              <p>Signed in with MetaMask!\n        <br />\n      </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport isLoginMetaMask from './components/isLoginMetaMask';\nimport isMetaMask from './components/isMetaMask'\nimport  isDesiredNetwork  from './components/isDesiredNetwork'\nimport Login from './components/Login'\n\nclass MyComponent extends Component {\n    components = {\n        foo: isLoginMetaMask,\n        boo:isMetaMask,\n        coo:isDesiredNetwork,\n        doo:Login\n    };\n    render() {\n       const TagName = this.components[this.props.tag || 'foo'];\n       return <TagName />\n    }\n}\nexport default MyComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}