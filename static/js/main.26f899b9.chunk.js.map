{"version":3,"sources":["components/Login.js","App.js","components/isLoginMetaMask.js","components/isMetaMask.js","components/isDesiredNetwork.js","MyComponent.js","serviceWorker.js","index.js","Ropsten.png"],"names":["accounts","isMobile","isLoginMetaMask","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","isMetaMask","isDesiredNetwork","_this","state","image","clicked","description","handleClick","bind","assertThisInitialized","e","preventDefault","setState","src","height","width","alt","_this2","Button_default","onClick","Login","check","setInterval","account","window","web3","eth","console","log","MyComponent","components","b","c","d","TagName","tag","detect","require","App","context","handleShow","handleClose","network","mount","init","show","install","isLogin","ethereum","on","browser","navigator","userAgent","match","name","open","enable","length","_this3","_this4","networkVersion","location","reload","content","src_MyComponent","react","Fragment","index_es","mb","Modal_default","onHide","Header","closeButton","Title","Body","Footer","variant","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.26f899b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\n\n\nvar accounts;\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.check = this.check.bind(this)\n\n    }\n    componentDidMount() {\n        this.check()\n    }\n\n    check() {\n\n        setInterval(function () {\n            var account = window.web3.eth.accounts[0];\n            if (window.web3.eth.accounts[0] !== account) {\n                account = window.web3.eth.accounts[0];\n\n                console.log(account)\n\n            }\n            accounts = account\n            console.log(accounts)\n\n        }, 100);\n\n\n    }\n    render() {\n        return (\n            <div>\n                <p>Logged in as {accounts}\n                    <br />\n                </p>\n            </div>\n        )\n    }\n}","\r\nimport React, { Component } from 'react';\r\nimport { Fragment } from 'react'\r\nimport { MetaMaskButton } from 'rimble-ui'\r\nimport Web3 from 'web3';\r\nimport MyComponent from './MyComponent'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport './App.css';\r\nvar detect = require('detect-browser').detect\r\n\r\nvar isMobile;\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.network = this.network.bind(this)\r\n    this.mount = this.mount.bind(this)\r\n\r\n    this.init = this.init.bind(this);\r\n\r\n\r\n    this.state = {\r\n      show: false,\r\n      install: false,\r\n      isMetaMask: false,\r\n      isLoginMetaMask: false,\r\n      isDesiredNetwork: false,\r\n      isLogin: false\r\n    };\r\n  }\r\n  componentWillMount() {\r\n\r\n\r\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\r\n    if (typeof web3 !== 'undefined') {\r\n      // Use Mist/MetaMask's provider\r\n      this.state.install = false;\r\n      window.ethereum.on('networkChanged', (accounts) => {\r\n\r\n        if (accounts === \"3\") {\r\n          this.setState({\r\n            isLogin: true,\r\n            isDesiredNetwork: false,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          })\r\n        }\r\n        else {\r\n          this.setState({\r\n            isLogin: false,\r\n            isDesiredNetwork: true,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          })\r\n\r\n        }\r\n      })\r\n    } else {\r\n      this.state.install = true;\r\n    }\r\n  }\r\n\r\n\r\n  mount() {\r\n\r\n\r\n    if (typeof web3 !== 'undefined') {\r\n      // If a web3 instance is already provided by Meta Mask.\r\n      this.setState({ isMetaMask: false })\r\n      this.init()\r\n\r\n    } else {\r\n      // Specify default instance if no web3 instance provided\r\n\r\n      const browser = detect()\r\n\r\n      // Touch the web3 object to trigger Brave install prompt\r\n\r\n      isMobile = !!detectMobile()\r\n\r\n      function detectMobile() {\r\n        return (\r\n          navigator.userAgent.match(/Android/i)\r\n          || navigator.userAgent.match(/webOS/i)\r\n          || navigator.userAgent.match(/iPhone/i)\r\n          || navigator.userAgent.match(/iPad/i)\r\n          || navigator.userAgent.match(/iPod/i)\r\n          || navigator.userAgent.match(/BlackBerry/i)\r\n          || navigator.userAgent.match(/Windows Phone/i)\r\n        )\r\n      }\r\n      if (!isMobile) {\r\n        switch (browser.name) {\r\n\r\n          case 'firefox':\r\n            window.open('https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/', '_blank')\r\n\r\n\r\n            break\r\n\r\n          case 'chrome':\r\n            window.open('https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en', '_blank')\r\n\r\n          case 'opera':\r\n            window.open('https://addons.opera.com/en/extensions/details/metamask/', '_blank')\r\n\r\n            break\r\n\r\n        }\r\n\r\n      }\r\n\r\n      this.setState({ isMetaMask: true });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  async init() {\r\n    try {\r\n      const accounts = await window.ethereum.enable()\r\n      this.setState({\r\n        isDesiredNetwork: true,\r\n        isMetaMask: false\r\n      })\r\n      this.network()\r\n\r\n    } catch (error) {\r\n\r\n      this.setState({ isLoginMetaMask: true, isMetaMask: false })\r\n\r\n    }\r\n    window.ethereum.on('accountsChanged', (accounts) => {\r\n\r\n      if (accounts.length === 1) {\r\n        this.setState({\r\n          isLoginMetaMask: true,\r\n          isMetaMask: false,\r\n          isDesiredNetwork: false,\r\n          isLogin: false\r\n        })\r\n        this.init()\r\n\r\n      }\r\n      else {\r\n        this.setState({\r\n          isLoginMetaMask: false,\r\n          isMetaMask: false,\r\n          isDesiredNetwork: false,\r\n          isLogin: true\r\n        })\r\n\r\n\r\n      }\r\n\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  network() {\r\n\r\n\r\n    // If a web3 instance is already provided by Meta Mask.\r\n    if (window.ethereum.networkVersion === \"3\") {\r\n      this.setState({ isLogin: true })\r\n    } else {\r\n\r\n\r\n      window.ethereum.on('networkChanged', (accounts) => {\r\n\r\n        if (accounts === \"3\") {\r\n          this.setState({\r\n            isLogin: true,\r\n            isDesiredNetwork: false,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          })\r\n        }\r\n        else {\r\n          this.setState({\r\n            isLogin: false,\r\n            isDesiredNetwork: true,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          })\r\n\r\n        }\r\n      })\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  handleClose() {\r\n    window.location.reload();\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n    this.mount()\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    if (this.state.isMetaMask) {\r\n      content = <MyComponent tag='a'></MyComponent>\r\n\r\n    }\r\n    if (this.state.isLoginMetaMask) {\r\n      content = <MyComponent tag='b'>\r\n      </MyComponent>\r\n\r\n    }\r\n    if (this.state.isDesiredNetwork) {\r\n      content = <MyComponent tag='c'>\r\n\r\n      </MyComponent>\r\n    }\r\n    if (this.state.isLogin) {\r\n      content = <MyComponent tag='d' ></MyComponent>\r\n    }\r\n    if (isMobile) {\r\n      content = <Fragment>\r\n        Mobile coming soon!\r\n      </Fragment>\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n\r\n        <MetaMaskButton mb={3} onClick={this.handleShow}>{this.state.install ? \"Install MetaMask\" : \"Connect with MetaMask\"}</MetaMaskButton>\r\n\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Lets Start!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Done!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\n\n\n\nexport default class isLoginMetaMask extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div>\n                <p>Login into MetaMask\n            <br />\n                </p>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\n\n\n\nexport default class isMetaMask extends Component{\n    \n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <div>\n                <p>Install MetaMask to Sign in\n                \n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport image from '../Ropsten.png'\n\n\nexport default class isDesiredNetwork extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            image: '',\n            clicked: true,\n            description: ''\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.setState({ clicked: !this.state.clicked })\n        if (this.state.clicked) {\n            this.state.image = <img src={image} height=\"300\" width=\"450 \" alt=\"fireSpot\" />\n            this.state.description = 'Go to the network\\'s dropdown and Select Ropsten network'\n        }\n        else {\n            this.state.image = ''\n            this.state.description = ''\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={(e) => this.handleClick(e)}> Connect To Ropsten Network</Button>\n                <br />\n                {this.state.image}\n                <br />\n                {this.state.description}\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport isLoginMetaMask from './components/isLoginMetaMask';\nimport isMetaMask from './components/isMetaMask'\nimport  isDesiredNetwork  from './components/isDesiredNetwork'\nimport Login from './components/Login'\n\nclass MyComponent extends Component {\n    components = {\n        b: isLoginMetaMask,\n        a:isMetaMask,\n        c:isDesiredNetwork,\n        d:Login\n    };\n    render() {\n       const TagName = this.components[this.props.tag || 'a'];\n       return <TagName />\n    }\n}\nexport default MyComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Ropsten.7a313811.png\";"],"sourceRoot":""}